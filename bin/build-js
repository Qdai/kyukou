#!/usr/bin/env node

'use strict';

const browserify = require('browserify');
const config = require('config');
const fs = require('fs');
const minifyify = require('minifyify');
const path = require('path');
const mkdirp = require('mkdirp');
const preprocessify = require('preprocessify');

const files = [
  'src/js/admin.js',
  'src/js/app.js',
  'src/js/calendar.js',
  'src/js/status.js'
];
const dest = 'public/js';

mkdirp.sync(dest);

files.forEach(src => {
  const filename = `${src.slice(src.lastIndexOf('/') + 1, src.lastIndexOf('.'))}.bundle.js`;
  browserify()
    .require(src, { entry: true })
    .plugin(minifyify, {
      map: false,
      uglify: {
        output: {
          comments: /@preserve|license|@cc_on/i
        }
      }
    })
    .transform(preprocessify, {
      includeExtensions: ['.js'],
      context: {
        SITE_URL: `//${config.get('site.url')}`
      }
    })
    .bundle()
    .pipe(fs.createWriteStream(path.join(dest, filename)));
});
